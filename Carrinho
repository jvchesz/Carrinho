# [Circuitos Elétricos Eletrônicos] 1º sem. 2018

## Turma 1G
## Projeto: "Arduino em Rodas"
## Integrantes do grupo:

* Felipe Jose Rico Ragazzi 
* Kaique Oliveira Santos
* José Vitor Cunha Barboza

## Descrição resumida do projeto

No projeto, iremos criar um veículo sob rodas(Carrinho) utilizando o arduino UnoR3.
Outros componentes: Driver duplo de ponte H; Suporte para pilhas AA; Bluetooth HC-05; 
Jumpers; Buzze; DC motor.


###Codigo Que Utilizamos no projeto:

const int motorA1  = 9;   
const int motorA2  = 3;    
const int motorB1  = 11;    
const int motorB2  = 10;  
const int motorENA = 6;    
const int motorENB = 5;
const int buzzer = 13 ;   

const int BTState = 2;   

int i = 0;
int j = 0;
int state_rec;
int vSpeed = 200; 
char state;

void setup() {
  pinMode(motorA1, OUTPUT);
  pinMode(motorA2, OUTPUT);
  pinMode(motorB1, OUTPUT);
  pinMode(motorB2, OUTPUT);
  pinMode(buzzer, OUTPUT);
  pinMode(BTState, INPUT);
  pinMode(motorENA, OUTPUT);
  pinMode(motorENB, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  if (digitalRead(BTState) == LOW) {
    state_rec = 'S';
  }
  if (Serial.available() > 0) {
    state_rec = Serial.read();
    state = state_rec;
    //   Serial.println(vSpeed);
  }
  if (state == '0') {
    vSpeed = 0;
  }
  else if (state == '4') {
    vSpeed = 100;
  }
  else if (state == '6') {
    vSpeed = 155;
  }
  else if (state == '7') {
    vSpeed = 180;
  }
  else if (state == '8') {
    vSpeed = 200;
  }
  else if (state == '9') {
    vSpeed = 230;
  }
  else if (state == 'q') {
    vSpeed = 255;
  }

  if (state != 'S') {
    Serial.print(state);
  }
  if (state == 'F') {
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorB1, vSpeed);
    analogWrite(motorA1, vSpeed);
    analogWrite(motorA2, 0);
    analogWrite(motorB2, 0);
  }

  else if (state == 'I') {  
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, vSpeed);
    analogWrite(motorA2, 0);
    analogWrite(motorB1, 100);
    analogWrite(motorB2, 0);
  }

  else if (state == 'G') {  
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, 100);
    analogWrite(motorA2, 0);
    analogWrite(motorB1, vSpeed);
    analogWrite(motorB2, 0);
  }

  else if (state == 'B') { 
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, 0);
    analogWrite(motorB1, 0);
    analogWrite(motorB2, vSpeed);
    analogWrite(motorA2, vSpeed);
  }

  else if (state == 'H') { 
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, 0);
    analogWrite(motorA2, vSpeed);
    analogWrite(motorB1, 0);
    analogWrite(motorB2, 100);
  }

  else if (state == 'J') {  
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, 0);
    analogWrite(motorA2, 100);
    analogWrite(motorB1, 0);
    analogWrite(motorB2, vSpeed);
  }

  else if (state == 'L') {  
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, 0);
    analogWrite(motorA2, vSpeed);
    analogWrite(motorB1, vSpeed);
    analogWrite(motorB2, 0);
  }
  else if (state == 'R') {  
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, vSpeed);
    analogWrite(motorA2, 0);
    analogWrite(motorB1, 0);
    analogWrite(motorB2, vSpeed);
  }
  else if (state == 'S') {  
    analogWrite(motorENA, vSpeed);
    analogWrite(motorENB, vSpeed);
    analogWrite(motorA1, 0);
    analogWrite(motorA2, 0);
    analogWrite(motorB1, 0);
    analogWrite(motorB2, 0);
  }


  else if (state == 'V') {
    if (j == 0) {
      tone(buzzer, 1000);
      j = 1;
    }
    else if (j == 1) {
      noTone(buzzer);
      j = 0;
    }
    state = 'n';
  }


}


####Especifiações

~~Arduino Uno:

Características
Microcontrolador	ATmega328
Voltagem Operacional
5V
Voltagem de entrada (recomendada)
7-12V
Voltagem de entrada (limites)
6-20V
Pinos E/S digitais
14 (dos quais 6 podems ser saídas PWM)
Pinos de entrada analógica
6
Corrente CC por pino E/S	40 mA
Corrente CC para o pino 3,3V	50 mA
Flash Memory	32 KB (ATmega328) dos quais 0,5KB são utilizados pelo bootloader
SRAM	2 KB (ATmega328)
EEPROM	1 KB (ATmega328)
Velocidade de Clock	16 MHz


~~Ponte H L298N:

ESPECIFICAÇÕES PONTE H L298N:
Tensão de Operação: 4~35v
Chip: ST L298N (Datasheet)
Controle de 2 motores DC ou 1 motor de passo
Corrente de Operação máxima: 2A por canal ou 4A max
Tensão lógica: 5v
Corrente lógica: 0~36mA
Limites de Temperatura: -20 a +135°C
Potência Máxima: 25W
Dimensões: 43 x 43 x 27mm
Peso: 30g

~~Modulo Bluetooth HC05:

Especificações:
– Protocolo Bluetooth: v2.0+EDR
– Firmware: Linvor 1.8
– Frequência: 2,4GHz Banda ISM
– Modulação: GFSK
– Emissão de energia: <=4dBm, Classe 2
– Sensibilidade: <=84dBm com 0,1% BER
– Velocidade Assíncrono: 2,1Mbps(Max)/160Kbps
– Velocidade Síncrono: 1Mbps/1Mbps
– Segurança: Autentificação e Encriptação
– Perfil: Porta Serial Bluetooth
– Suporta modo Escravo (Slave) e Mestre (Master)
– CSR chip: Bluetooth v2.0
– Banda de Onda: 2,4Hhz-2,8Ghz, Banda ISM
– Tensão: 3,3v (2,7-4.2v)
– Corrente: Pareado 35mA; Conectado 8mA
– Temperatura: -40 ~ +105°C
– Alcance: 10m
– Baud Rate: 4800;9600;19200;38400;57600;115200;230400;460800;921600;1382400
– Dimensões: 26,9 x 13 x 2,2mm
– Peso: 9,6g.

~~Motor DC:

- Tensão de operação: 3 a 5VDC;
- RPM: 3000 (sem carga);
- Consumo de corrente: 58 mA (com carga);
- Temperatura de operação: -10 à 60°C;
- Dimensões do motor: 24.5 x 12.5 mm;
- Dimensões do eixo: 6.5 x 2 mm.

~~Modulo Buzzer:

CARACTERÍSTICAS:
- Buzzer Passivo BP18;
- Já integrado ao módulo;
- Emissão de sinais em diferentes frequências;
- Funciona como um alto-falante;
- Compatível com Arduino, Raspberry Pi, AVR, PIC, AMR. etc. 
- Perfuração para fixação.	

ESPECIFICAÇÕES:
- Modelo: BP18;
- Tensão de trabalho :3.5-5V;
- Corrente de trabalho: <25mA;
- Dimensões (CxLxA): 32x13x10mm;
- Peso: 3g.
